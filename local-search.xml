<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/12/09/%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/12/09/%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="title-笔记"><a href="#title-笔记" class="headerlink" title="title:笔记"></a>title:笔记</h2><p>​</p><h1 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h1><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="C:\Users\timis\AppData\Roaming\Typora\typora-user-images\image-20211013111332721.png" alt="image-20211013111332721"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm init [-y]               <span class="hljs-comment">// 生成package.json</span><br>npm install [--save] <span class="hljs-variable language_">module</span>  <span class="hljs-comment">//save表示写入到package.json的dependencies中</span><br><span class="hljs-comment">//npm 5.0版本以后不需要再加 --save，它会自动写入package.json</span><br>npm uninstall <span class="hljs-variable language_">module</span><br></code></pre></td></tr></table></figure><ul><li><p>package-lock.json作用：</p><p>1.加快模块下载速度<br>2.锁定模块版本，防止重新安装模块的时候自动更新成最新版</p></li><li><p>设置响应头</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># writeHead会把服务器自动创建的set-cookie给替换掉<br># setHeader不会，它会增加一个set-cookie，设置了几个就增加几个<br>res.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>,<br>    &#123;<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;text/plain&quot;</span>,<br>        <span class="hljs-string">&quot;set-cookie&quot;</span>:<span class="hljs-string">&quot;user=lienrong&quot;</span><br>    &#125;).<span class="hljs-title function_">end</span>()<br><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>,<span class="hljs-string">&quot;application/json&quot;</span>).<span class="hljs-title function_">end</span>()<br><span class="hljs-comment">//cookie添加多个值</span><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&quot;set-cookie&quot;</span>,[<span class="hljs-string">&quot;info_1&quot;</span>=<span class="hljs-string">&quot;userinfo&quot;</span>,<span class="hljs-string">&quot;info_2&quot;</span>=<span class="hljs-string">&quot;cartinfo&quot;</span>])<br></code></pre></td></tr></table></figure><ul><li>return的使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span>   <span class="hljs-comment">//终止当前函数的运行，并把return的值赋值给函数。使用return可以有效减少else的使用</span><br></code></pre></td></tr></table></figure><ul><li>常用第三方模块</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">express<br>art-template<br>express-art-template   <span class="hljs-comment">//express框架下的渲染引擎</span><br>express-session<br>body-parser<span class="hljs-comment">//解析post请求体</span><br>nodemon   <span class="hljs-comment">//调试时自动重启服务</span><br>mongoose  <span class="hljs-comment">//操作MongoDB</span><br>mysql<br>md5<br></code></pre></td></tr></table></figure><ul><li>导出文件的方法、属性供外部访问</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//module存储形式</span><br><span class="hljs-variable language_">module</span> = &#123;<br>    <span class="hljs-attr">exports</span>: &#123; <span class="hljs-attr">x</span>:<span class="hljs-string">&quot;x&quot;</span>,<span class="hljs-attr">xx</span>:<span class="hljs-string">&quot;xx&quot;</span>,<span class="hljs-attr">xxx</span>:<span class="hljs-string">&quot;xxx&quot;</span>&#125;,<br>    <span class="hljs-attr">aaa</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">bbb</span>:<span class="hljs-string">&quot;&quot;</span>   <br>    ...<br>    ...<br>&#125;<br><span class="hljs-comment">//文件默认代码</span><br><span class="hljs-built_in">exports</span> = <span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span><br><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">xx</span> = xx<span class="hljs-comment">//导出单个</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;&#125;<span class="hljs-comment">//导出多个</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = xxx<span class="hljs-comment">//只导出一个</span><br></code></pre></td></tr></table></figure><h3 id="MongoDB数据库"><a href="#MongoDB数据库" class="headerlink" title="MongoDB数据库"></a>MongoDB数据库</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//数据存储格式</span><br><span class="hljs-comment">//集合 -文档</span><br><span class="hljs-comment">//集合是数组，文档是一个一个的对象</span><br>&#123;<br>    <span class="hljs-attr">students</span>:[<br>        &#123;&#125;,<br>        &#123;&#125;,<br>        &#123;&#125;<br>    ],<br>    <span class="hljs-attr">teachers</span>:[<br>        &#123;&#125;,<br>        &#123;&#125;<br>    ],<br>   ...<br>    ...<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 该文件专门用来连接MongoDB，并创建不同的集合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongoose&quot;</span>)<br><span class="hljs-keyword">var</span> schema = mongoose.<span class="hljs-property">Schema</span><br><span class="hljs-comment">//连接数据库</span><br>mongoose.<span class="hljs-title function_">connect</span>(<span class="hljs-string">&quot;mongodb://localhost:27017/eduSystem&quot;</span>)<br><br><span class="hljs-comment">//设定集合结构和每个属性的约束条件</span><br><span class="hljs-comment">//&#123; 约束1，约束2...&#125;是一种设计约束的格式</span><br><span class="hljs-keyword">var</span> studentsSchema = <span class="hljs-keyword">new</span> <span class="hljs-title function_">schema</span>(&#123;<br>    <span class="hljs-attr">id</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">Number</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">name</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">sex</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">age</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">Number</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">country</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br><br>    &#125;<br>&#125;<br>)<br><span class="hljs-keyword">var</span> teacherSchema = <span class="hljs-keyword">new</span> <span class="hljs-title function_">schema</span>(&#123;<br><br>    <span class="hljs-attr">id</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">Number</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">email</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">password</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>,<br>        <span class="hljs-attr">required</span>:<span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">create_time</span>:&#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-title class_">Date</span>,<br>        <span class="hljs-attr">default</span>:<span class="hljs-title class_">Date</span>.<span class="hljs-property">now</span><br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//创建teachers集合（类似数据表）</span><br><span class="hljs-keyword">var</span> teachers = mongoose.<span class="hljs-title function_">model</span>(<span class="hljs-string">&quot;Teacher&quot;</span>,teacherSchema)<br><br><span class="hljs-comment">//创建students集合</span><br><span class="hljs-keyword">var</span> students = mongoose.<span class="hljs-title function_">model</span>(<span class="hljs-string">&quot;Student&quot;</span>,studentsSchema)<br><br><span class="hljs-comment">//必须写在最后，否则router中无法识别findOne之类的方法</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>    <span class="hljs-string">&quot;students&quot;</span>:students,<br>    <span class="hljs-string">&quot;teachers&quot;</span>:teachers<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 添加数据，每条数据是个对象</span><br><span class="hljs-comment">// 只能一个一个添加，不能一次性添加多个，会报错？</span><br><span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Kitten</span>(<br>    &#123;<span class="hljs-attr">username</span>:<span class="hljs-string">&quot;中国人&quot;</span>,<span class="hljs-attr">password</span>:<span class="hljs-number">1234</span>&#125;<br>)<br>a.<span class="hljs-title function_">save</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;sucess&quot;</span>)<br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//查询全部数据,返回数组</span><br><span class="hljs-title class_">Kitten</span>.<span class="hljs-title function_">find</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br>        <br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//按条件查询，返回数组</span><br><span class="hljs-title class_">Kitten</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">password</span>:<span class="hljs-number">1234</span>&#125;,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//返回的是对象</span><br><span class="hljs-title class_">Kitten</span>.<span class="hljs-title function_">findOne</span>(&#123;<span class="hljs-attr">password</span>:<span class="hljs-number">1234</span>&#125;,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//按条件删除数据</span><br><span class="hljs-title class_">Kitten</span>.<span class="hljs-title function_">deleteOne</span>(&#123;<span class="hljs-attr">password</span>:<span class="hljs-number">1234</span>&#125;,<span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;sucess&quot;</span>)<br>    &#125;<br><br>&#125;)<br><br><span class="hljs-comment">//更新一条数据，第一个参数是查询条件，第二个参数是要修改数据中的哪个值</span><br><span class="hljs-title class_">Kitten</span>.<span class="hljs-title function_">findOneAndUpdate</span>(&#123;<span class="hljs-attr">password</span>:<span class="hljs-number">23</span>&#125;,&#123;<span class="hljs-attr">password</span>:<span class="hljs-number">1234</span>&#125;,<span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>)&#123;<br>    <span class="hljs-keyword">if</span> (err)&#123;<br><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;sucess&quot;</span>)<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="使用express框架"><a href="#使用express框架" class="headerlink" title="使用express框架"></a>使用express框架</h3><ul><li>启动服务器</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>)<br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>()<br>app.<span class="hljs-title function_">listen</span>(port,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br><br>&#125;)<br></code></pre></td></tr></table></figure><ul><li><h5 id="路由分离与设计"><a href="#路由分离与设计" class="headerlink" title="路由分离与设计"></a>路由分离与设计</h5>app.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> router = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./router.js&quot;</span>)<br>app.<span class="hljs-title function_">use</span>(router) <span class="hljs-comment">//挂载路由</span><br></code></pre></td></tr></table></figure><p>​      router.js   —作用只有一个，对不同url做不同处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>)<br><span class="hljs-keyword">var</span> router = express.<span class="hljs-title class_">Router</span>()  <span class="hljs-comment">//创建路由</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>=router <span class="hljs-comment">//导出路由</span><br><br>router.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">req,res,next</span>)&#123;<br><br>&#125;)<br>router.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">req,res,next</span>)&#123;<br><br>&#125;)<br>......<br></code></pre></td></tr></table></figure><p>​路由设计</p><table><thead><tr><th>路径</th><th>请求类型</th><th>get参数</th><th>post参数</th><th>是否需要登录</th><th>备注</th></tr></thead><tbody><tr><td>&#x2F;login</td><td>get</td><td></td><td></td><td></td><td>获取登录页面</td></tr><tr><td>&#x2F;login</td><td>post</td><td></td><td>email、password</td><td></td><td>提交”登录“表单</td></tr><tr><td>&#x2F;create</td><td>get</td><td></td><td></td><td>是</td><td>获取添加学生页面</td></tr><tr><td>&#x2F;create</td><td>post</td><td></td><td>name、sex、age、country</td><td>是</td><td>提交”添加学生“表单</td></tr></tbody></table><ul><li>获取post请求的body</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//使用body-parser中间件</span><br><span class="hljs-keyword">var</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>)<br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;))<span class="hljs-comment">//解析application/x-www-form-urlencoded。req.body含有  [Object: null prototype]</span><br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">true</span> &#125;))<span class="hljs-comment">//req.body是标准对象</span><br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">json</span>())  <span class="hljs-comment">//解析application/json</span><br>req.<span class="hljs-property">body</span>    <span class="hljs-comment">//req.body是一个对象</span><br><br><span class="hljs-comment">//不使用中间件</span><br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">json</span>())<br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">urlencoded</span>(&#123;<span class="hljs-attr">extended</span>:<span class="hljs-literal">true</span>&#125;))<br></code></pre></td></tr></table></figure><ul><li>对外开放静态资源访问</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;/public&quot;</span>,express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&quot;public&quot;</span>)) <span class="hljs-comment">//访问url是 /public/xxx</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;/aaa&quot;</span>,express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&quot;public&quot;</span>)) <span class="hljs-comment">//访问url是 /aaa/xxx</span><br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">static</span>(<span class="hljs-string">&quot;public&quot;</span>)) <span class="hljs-comment">//访问url是 /xxx</span><br></code></pre></td></tr></table></figure><h4 id="art-template"><a href="#art-template" class="headerlink" title="art-template"></a>art-template</h4><ul><li>express 中使用art-template</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install --save art-template<br>npm install --save express-art-template<br>app.<span class="hljs-title function_">engine</span>(<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express-art-template&quot;</span>))<br>app.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;views&quot;</span>,<span class="hljs-string">&quot;/xxx&quot;</span>)<span class="hljs-comment">//修改默认寻找html的目录views</span><br>res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>,&#123;<br>    <span class="hljs-attr">xxx</span>:<span class="hljs-string">&quot;xxx&quot;</span>,<br>    <span class="hljs-attr">xxx</span>:<span class="hljs-string">&quot;xxx&quot;</span><br>&#125;)<br></code></pre></td></tr></table></figure><ul><li>art-template页面继承与引用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;&#123; extend &quot;./xxx.html&quot;&#125;&#125;   <br>&#123;&#123; block &quot;自定义的名字&quot;&#125;&#125;<br>这里写自定义页面<br>&#123;&#123; /block &#125;&#125;<br>&#123;&#123; include ./xxx.html &#125;&#125; <br></code></pre></td></tr></table></figure><ul><li>模板语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//渲染</span><br>res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>,&#123;<br>                <span class="hljs-attr">user</span>:req.<span class="hljs-property">session</span>.<span class="hljs-property">userinfo</span>,<br>                <span class="hljs-attr">students</span>:data<br>          &#125;)<br><br><span class="hljs-comment">//html中如果没有模板语法存在，可以直接返回html</span><br><span class="hljs-comment">//html中如果有模板语法，省略第二个参数，可以直接忽略语法</span><br>res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">students是数组[</span><br><span class="hljs-comment">&#123;&#125;,</span><br><span class="hljs-comment">&#123;&#125;,</span><br><span class="hljs-comment">&#123;&#125;</span><br><span class="hljs-comment">   ]</span><br><span class="hljs-comment">循环读取students，有几个对象就创建几个&lt;tr&gt;标签</span><br><span class="hljs-comment">--&gt;</span><br>&#123;&#123; each students &#125;&#125;<br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; $value.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; $value.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; $value.sex &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; $value.age &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; $value.country &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span> = <span class="hljs-string">&quot;/update?id=&#123;&#123; $value.id &#125;&#125;&quot;</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span> = <span class="hljs-string">&quot;/del?id=&#123;&#123; $value.id &#125;&#125;&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                  <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>              <br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>&#123;&#123; /each &#125;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">如果user存在，那么展示第一个&lt;ul&gt;</span><br><span class="hljs-comment">否则，展示第二个&lt;ul&gt;</span><br><span class="hljs-comment">--&gt;</span><br>&#123;&#123; if user &#125;&#125;<br>           <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>欢迎您：<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>&#123;&#123; user.email &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/logout&quot;</span>&gt;</span>退出登录<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>           <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        &#123;&#123; else &#125;&#125;<br>           <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/login&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/register&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br> &#123;&#123; /if &#125;&#125;<br></code></pre></td></tr></table></figure><ul><li>回调</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//readFile中的function是一个回调函数，若想使用该函数里面的变量，</span><br><span class="hljs-comment">//就要在该函数执行完成以后，把变量作为参数传递给外部的callback函数，</span><br><span class="hljs-comment">//这时callback函数中参数就是需要的变量</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">list</span>(<span class="hljs-params">callback</span>)&#123;<br>    fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./db.json&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>        students=<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(data).<span class="hljs-property">students</span><br>        <span class="hljs-title function_">callback</span>(students)<br>    &#125;)<br>&#125;<br><span class="hljs-comment">//调用list函数</span><br><span class="hljs-title function_">list</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">x</span>)&#123;<br>    <span class="hljs-comment">//x就是students</span><br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//遍历</span><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> x)&#123;<br>    consolo.<span class="hljs-title function_">log</span>(i)<br>&#125;<br><br><span class="hljs-comment">//x是数组时，i的值在执行的时候是索引下标</span><br><span class="hljs-comment">//x是对象时，i的值在执行的时候是属性</span><br></code></pre></td></tr></table></figure><ul><li>Promise对象</li></ul><ol><li><p>支持then链式语法，解决回调地狱</p></li><li><p>规定异步执行顺序</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>    fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./router.js&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>        <span class="hljs-keyword">var</span> x = <span class="hljs-string">&quot;hello world&quot;</span><br>        <span class="hljs-title function_">resolve</span>(x) <span class="hljs-comment">//x作为参数传递给resolve函数 </span><br>    &#125;)<br>&#125;)<br><br>p1<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>)&#123;  <span class="hljs-comment">//这就是p1的resolve函数，data就是x</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">123</span>  <span class="hljs-comment">//把x传递给下个then的函数的参数</span><br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>)&#123; <span class="hljs-comment">//a就是123</span><br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./app.js&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a+<span class="hljs-string">&quot;   hahaha&quot;</span>)<br>        &#125;)<br>    &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>)<br><br><span class="hljs-keyword">var</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>    fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./router.js&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>        <span class="hljs-keyword">var</span> x = <span class="hljs-string">&quot;hello world&quot;</span><br>        <span class="hljs-title function_">resolve</span>(x) <span class="hljs-comment">//x作为参数传递给resolve函数</span><br>        <br>    &#125;)<br>&#125;)<br><br>p1<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>)&#123;  <span class="hljs-comment">//这就是p1的resolve函数，data就是x</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>            fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./router.js&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>                <span class="hljs-keyword">var</span> y = <span class="hljs-string">&quot;hello world&quot;</span>+<span class="hljs-number">123</span><br>                <span class="hljs-title function_">resolve</span>(y) <span class="hljs-comment">//y作为参数传递给resolve函数         </span><br>            &#125;)<br>        &#125;) <br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>)&#123; <span class="hljs-comment">//a就是y</span><br>        fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./app.js&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)&#123;<br>    <br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a+<span class="hljs-string">&quot;   hahaha&quot;</span>)<br>        &#125;)<br>    &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs javascript">#<span class="hljs-keyword">throw</span> err不能放在then方法的异步函数中，要放在异步函数外面，否则<span class="hljs-keyword">catch</span>捕获不到err<br>#then的异步函数结果想要传递给下个then，结果必须放在异步函数外面，因此必须使用promise，通过resolve传递<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>        connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers where email=?&quot;</span>,body.<span class="hljs-property">email</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>            <span class="hljs-keyword">if</span> (err)&#123;<br>                <span class="hljs-title function_">reject</span>(err)<span class="hljs-comment">//设为异常</span><br>                <span class="hljs-keyword">return</span><br>            &#125;<br>            <span class="hljs-title function_">resolve</span>(result.<span class="hljs-property">length</span>)<br>        &#125;)<br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">length</span>)&#123;<br>        <span class="hljs-keyword">if</span> (length !== <span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//判断user表中有无对应用户</span><br>            res.<span class="hljs-title function_">json</span>(&#123;<br>                <span class="hljs-attr">code</span>:<span class="hljs-number">4</span>,<br>                <span class="hljs-attr">message</span>:<span class="hljs-string">&quot;用户已存在&quot;</span><br>            &#125;)<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;&#125;)   <span class="hljs-comment">//不执行后面的then</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>            connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers order by id desc limit 1&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>                <span class="hljs-keyword">if</span> (err)&#123;<br>                    <span class="hljs-title function_">reject</span>(err)<br>                    <span class="hljs-keyword">return</span><br>                &#125;<br>                <span class="hljs-keyword">if</span> (result.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>)&#123; <span class="hljs-comment">//判断user表是否为空，为空新用户id设为1000，不为空新用户id是最后一个用户的id增加1</span><br>                    newid = <span class="hljs-number">1000</span><br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    newid = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(result))[<span class="hljs-number">0</span>].<span class="hljs-property">id</span> + <span class="hljs-number">1</span><br>                &#125; <br>                <span class="hljs-title function_">resolve</span>(newid)        <span class="hljs-comment">//传递新用户的id给下个then</span><br>            &#125;)<br>        &#125;)    <br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">newid</span>)&#123;<br>            connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;insert into teachers values(?,?,?)&quot;</span>,[newid,body.<span class="hljs-property">email</span>,body.<span class="hljs-property">password</span>],<br>            <span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;<br>                <span class="hljs-keyword">if</span> (err)&#123;<br>                   <span class="hljs-title function_">next</span>(err)<br>                    <span class="hljs-keyword">return</span> <br>                &#125;<br>                req.<span class="hljs-property">session</span>.<span class="hljs-property">userinfo</span> = &#123;<span class="hljs-attr">email</span>:body.<span class="hljs-property">email</span>&#125;<br>                res.<span class="hljs-title function_">json</span>(&#123;<br>                    <span class="hljs-attr">code</span>:-<span class="hljs-number">1</span>,<br>                    <span class="hljs-attr">message</span>:<span class="hljs-string">&quot;ok&quot;</span><br>                &#125;)<br>            &#125;)    <br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>)&#123;<span class="hljs-comment">//捕获异常</span><br>       <span class="hljs-title function_">next</span>(err)<br>    &#125;)<br></code></pre></td></tr></table></figure><ul><li><p>​async await优化promise</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># <span class="hljs-keyword">await</span>会等待promise结果变为resolve，再执行后面的代码<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">myfun</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>        <span class="hljs-comment">//异步函数</span><br>        <span class="hljs-title function_">resolve</span>()<br>    &#125;)<br>    <br>    <span class="hljs-comment">//其他代码</span><br>    <br>    <span class="hljs-comment">//把promise返回值赋值给x</span><br>    <span class="hljs-keyword">var</span> x = <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve,reject</span>)&#123;<br>        <span class="hljs-comment">//异步函数</span><br>        <span class="hljs-title function_">resolve</span>()<br>    &#125;)<br>&#125;<br><span class="hljs-comment">//执行函数，并捕获异常</span><br><span class="hljs-title function_">myfun</span>().<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>)&#123;<br>    <br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>动态获取绝对路径</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>)<br>path.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>......) <span class="hljs-comment">//拼接成路径，拼接过程中自动加入\或删除多余的\</span><br><br>path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>) <span class="hljs-comment">//返回当前目录的上一级目录</span><br>#path还有其他<span class="hljs-variable constant_">API</span>，请查看文档<br><br><span class="hljs-comment">//注意以下两个属性前面有两条下划线</span><br>__dirname  <span class="hljs-comment">//动态获取当前文件所在的目录的绝对路径</span><br>__filename <span class="hljs-comment">//动态获取当前文件的绝对路径</span><br><br><br>fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&quot;./db.json&quot;</span>,<span class="hljs-string">&quot;utf8&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,data</span>)<br>#当执行node所处的目录不是xxx.<span class="hljs-property">js</span>所处的目录时，使用相对路径会报错<br>#所有的针对文件的读写等操作（包括对外开放静态资源）都不要使用相对路径，而要使用__dirname和__filename来动态获取绝对路径<br>#但是<span class="hljs-built_in">require</span>引用的文件要用相对路径，它不受执行node所处目录影响<br></code></pre></td></tr></table></figure><ul><li>art-template页面继承与引用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;&#123; extend &quot;./xxx.html&quot;&#125;&#125;   <br>&#123;&#123; block &quot;自定义的名字&quot;&#125;&#125;<br>这里写自定义页面<br>&#123;&#123; /block &#125;&#125;<br>&#123;&#123; include ./xxx.html &#125;&#125; <br></code></pre></td></tr></table></figure><ul><li><h5 id="表单同步提交和异步提交"><a href="#表单同步提交和异步提交" class="headerlink" title="表单同步提交和异步提交"></a>表单同步提交和异步提交</h5></li><li><p>同步提交</p><ul><li>页面结果由服务器处理</li><li>页面会刷新</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get/post&quot;</span>&gt;</span><br>    .....<br>    .....<br>    .....<br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>异步提交</p><ul><li>服务器只返回数据，客户端通过ajax，接受数据，根据不同数据对页面做不同处理</li><li>服务器对页面的处理不会生效</li><li>页面不会刷新</li><li>页面想要跳转请使用window.location.href&#x3D;”xxx”</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 1.html引入jquery库</span><br><span class="hljs-comment"> 2.引用外部js文件</span><br><span class="hljs-comment"> 3.去掉form标签的action和method属性</span><br><span class="hljs-comment"> 4.button的type属性改为button</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">//第一种方式，不定义函数，直接调用js，监听指定元素的点击事件，发送ajax请求</span><br>$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>  $(<span class="hljs-string">&quot;#login_btn&quot;</span>).<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;click&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;post&quot;</span>,<br>      <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/login&quot;</span>,<br>      <span class="hljs-attr">data</span>:$(<span class="hljs-string">&quot;#form&quot;</span>).<span class="hljs-title function_">serialize</span>(), <span class="hljs-comment">//获取form表单数据</span><br>      <span class="hljs-attr">success</span>:<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>)&#123;<br>        <span class="hljs-keyword">if</span>(data.<span class="hljs-property">result</span> == -<span class="hljs-number">1</span>)&#123;<br>          <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(data.<span class="hljs-property">message</span>)<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data.<span class="hljs-property">result</span> == <span class="hljs-number">0</span>)&#123;<br>          <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> = <span class="hljs-string">&quot;/&quot;</span><br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>          <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(data.<span class="hljs-property">message</span>)<br>        &#125;<br>      &#125;<br>    &#125;)<br>  &#125;)<br>&#125;)<br><br><span class="hljs-comment">//第二种方式,定义函数，触发了html事件后，调用函数发送ajax请求</span><br><span class="hljs-comment">//html中button添加事件onclick=&quot;login()&quot;</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">login</span>(<span class="hljs-params"></span>)&#123;<br>  $.<span class="hljs-title function_">ajax</span>(&#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;post&quot;</span>,<br>    <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/login&quot;</span>,<br>    <span class="hljs-attr">data</span>:$(<span class="hljs-string">&quot;#form&quot;</span>).<span class="hljs-title function_">serialize</span>(),<br>    <span class="hljs-attr">success</span>:<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>)&#123;<br>      <span class="hljs-keyword">if</span>(data.<span class="hljs-property">result</span> == -<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(data.<span class="hljs-property">message</span>)<br>      &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data.<span class="hljs-property">result</span> == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> = <span class="hljs-string">&quot;/&quot;</span><br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(data.<span class="hljs-property">message</span>)<br>      &#125;<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>API</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">end</span>() <span class="hljs-comment">//设置http响应代码</span><br>res.<span class="hljs-title function_">json</span>(&#123;<span class="hljs-attr">result</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">message</span>:<span class="hljs-string">&quot;ok&quot;</span>&#125;)<span class="hljs-comment">//自动调用JSON.stringify()把参数转为json字符串，响应头的Content-Type设置为application/json</span><br></code></pre></td></tr></table></figure><ul><li><h4 id="express框架本身不支持session，需要使用第三方session模块"><a href="#express框架本身不支持session，需要使用第三方session模块" class="headerlink" title="express框架本身不支持session，需要使用第三方session模块"></a>express框架本身不支持session，需要使用第三方session模块</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><ol><li>客户端发送登录请求，用户名密码校验通过后，服务器创建session，并把session存储到内存或者数据库</li><li>服务器自动添加响应头set-cookie&#x3D;sessionID</li><li>客户端收到set-cookie响应，设置cookie</li><li>客户端以后的每次请求都会在请求头中发送cookie</li><li>服务器拿到cookie中的sessionID，到session存储介质中进行检索，如果找到，会把session中存储的数据（一般是用户信息）赋值给 req.session；如果找不到，req.session无值</li><li>服务器通过req.session是否有值来判断用户是否已登录</li></ol><p>session何时清除</p><ol start="3"><li>主动调用destroy（）方法清除</li><li>内存中的session，服务器进程终止后清除</li><li>通过session存储介质设置的expires自动清除session</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install express-session<br><span class="hljs-keyword">var</span> session = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express-session&quot;</span>)<br><br># session默认存储到内存<br># cookie的maxAge同时也影响session的expires<br># cookie的maxAge优先于介质中设置的expires，同时都有设置的时候，session的expires取决于maxAge<br><br><span class="hljs-comment">//存储到MongoDB</span><br>npm install connect-mongo<br><span class="hljs-keyword">var</span> <span class="hljs-title class_">MongoStore</span> = <span class="hljs-built_in">require</span> (<span class="hljs-string">&quot;connect-mongo&quot;</span>)<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">session</span>(<br>    &#123;<br>    <span class="hljs-attr">secret</span>: <span class="hljs-string">&#x27;keyboard cat&#x27;</span>, <span class="hljs-comment">//自定义字符串，hash计算得到T，放在cookie中，防止cookie被篡改</span><br>       <span class="hljs-attr">resave</span>: <span class="hljs-literal">false</span>,<br>       <span class="hljs-attr">cookie</span>:&#123;<span class="hljs-attr">maxAge</span>:<span class="hljs-number">60000</span>&#125;, <span class="hljs-comment">//设置cookie有效时间，单位是ms，cookie过期后，后续请求就不携带Cooke了</span><br>       <span class="hljs-attr">saveUninitialized</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//只要客户端来请求，就自动生成一个session</span><br>       <span class="hljs-attr">store</span>:<span class="hljs-title class_">MongoStore</span>.<span class="hljs-title function_">create</span>(&#123;<br>           <span class="hljs-attr">mongoUrl</span>: <span class="hljs-string">&#x27;mongodb://localhost:27017/eduSystem&#x27;</span><br>           <span class="hljs-attr">ttl</span>:<span class="hljs-number">1209600</span><span class="hljs-comment">//设置session expires</span><br>       &#125;)  <span class="hljs-comment">//session存储到MongoDB</span><br>   &#125;<br>))<br><br><span class="hljs-comment">//存储到mysql</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">MysqlStore</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express-mysql-session&quot;</span>)<br><span class="hljs-keyword">var</span> options = &#123;<br>    <span class="hljs-attr">host</span>:<span class="hljs-string">&quot;192.168.199.100&quot;</span>,<br>    <span class="hljs-attr">port</span>:<span class="hljs-number">3306</span>,<br>    <span class="hljs-attr">user</span>:<span class="hljs-string">&quot;root&quot;</span>,<br>    <span class="hljs-attr">password</span>:<span class="hljs-string">&quot;7758521&quot;</span>,<br>    <span class="hljs-attr">database</span>:<span class="hljs-string">&quot;eduSystem&quot;</span>,<br>    <span class="hljs-attr">expiration</span>: <span class="hljs-number">86400000</span>,    <span class="hljs-comment">//session存储时效，单位ms，session只是过期，不会清除</span><br>    <span class="hljs-attr">clearExpired</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//是否清除过期session</span><br>    <span class="hljs-attr">checkExpirationInterval</span>:<span class="hljs-number">120000</span><span class="hljs-comment">//每隔多长时间清除一次过期session</span><br>&#125;<br><span class="hljs-keyword">var</span> sessionStore = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MysqlStore</span>(options)<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">session</span>(<br>    &#123;<br>        <span class="hljs-attr">secret</span>:<span class="hljs-string">&quot;osdsjyp012&quot;</span>,<br>        <span class="hljs-attr">resave</span>:<span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">saveUninitialized</span>:<span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">store</span>:sessionStore<br>    &#125;<br>))<br><br><span class="hljs-comment">//用户登录时创建session，会自动在响应头中添加set-cookie = sessionID</span><br><span class="hljs-comment">//用户登录后，后续向session中添加数据</span><br>req.<span class="hljs-property">session</span>.<span class="hljs-property">yourSessionName</span> = yourSessionValue<br><br><br><span class="hljs-comment">//销毁服务器session</span><br>req.<span class="hljs-property">session</span>.<span class="hljs-title function_">destroy</span>()<br><br><span class="hljs-comment">//退出登录状态,服务器session还在</span><br>req.<span class="hljs-property">session</span>.<span class="hljs-property">yourSessionName</span> = <span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><ul><li>使用第三方模块md5加密</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install md5<br><span class="hljs-keyword">var</span> md5 = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;md5&quot;</span>)<br>md5passwod = <span class="hljs-title function_">md5</span>(body.<span class="hljs-property">password</span>)<br></code></pre></td></tr></table></figure><ul><li>异步请求时，服务器对页面的更改、跳转无效</li></ul><h4 id="Express中间件"><a href="#Express中间件" class="headerlink" title="Express中间件"></a>Express中间件</h4><ol><li><h5 id="中间件是按照代码顺序依次执行的"><a href="#中间件是按照代码顺序依次执行的" class="headerlink" title="中间件是按照代码顺序依次执行的"></a>中间件是按照代码顺序依次执行的</h5></li><li><h5 id="请求经过中间件时，如果中间件中没有调用next-，则请求会停留在这个中间件中；如果有调用next-，则请求会继续去匹配下个中间件，但是它只会去匹配符合规定条件的中间件"><a href="#请求经过中间件时，如果中间件中没有调用next-，则请求会停留在这个中间件中；如果有调用next-，则请求会继续去匹配下个中间件，但是它只会去匹配符合规定条件的中间件" class="headerlink" title="请求经过中间件时，如果中间件中没有调用next()，则请求会停留在这个中间件中；如果有调用next()，则请求会继续去匹配下个中间件，但是它只会去匹配符合规定条件的中间件"></a>请求经过中间件时，如果中间件中没有调用next()，则请求会停留在这个中间件中；如果有调用next()，则请求会继续去匹配下个中间件，但是它只会去匹配符合规定条件的中间件</h5></li><li><h5 id="中间件实际上接受3个参数function（req-res-next），next是个函数"><a href="#中间件实际上接受3个参数function（req-res-next），next是个函数" class="headerlink" title="中间件实际上接受3个参数function（req,res,next），next是个函数"></a>中间件实际上接受3个参数function（req,res,next），next是个函数</h5></li><li><p>应用程序级别中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//万能匹配 任何请求都会经过这里</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>[<span class="hljs-title function_">next</span>()]    <br>&#125;)<br><span class="hljs-comment">//只匹配以/xxx开头的去请求</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;/xxx&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>路由级别中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//严格匹配，规定了请求方法和请求路径。只有符合的请求才会经过这里</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;url&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <br>&#125;)<br>app.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;url&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <br>&#125;)<br>app.<span class="hljs-title function_">put</span>(...)<br>...<br></code></pre></td></tr></table></figure></li><li><p>错误处理中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//必须接受4个参数</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err,req,res,next</span>)&#123;<br>     res.<span class="hljs-title function_">status</span>(<span class="hljs-number">500</span>).<span class="hljs-title function_">send</span>(err)<br>&#125;)<br><span class="hljs-comment">//使用</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;url&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">req,res,next</span>)&#123;<br>  ...<br>    ...<br>    <span class="hljs-keyword">if</span> (err)&#123;<br>   <span class="hljs-keyword">return</span> <span class="hljs-title function_">next</span>(err)  <br>&#125;  <br>    ...<br>    ...<br>&#125;)<br><br></code></pre></td></tr></table></figure></li><li><p>内置中间件</p><p>express.static</p></li><li><p>第三方中间件</p><p>body-parser</p><p>session</p></li></ol><ul><li>express自定义处理404</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//必须放在挂载路由后面，原因是中间件的执行顺序</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>)&#123;         <br>    res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;404页面找不到&quot;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p> res.header(“Access-Control-Allow-Origin”, “*”)&#x2F;&#x2F;允许跨域请求</p><h4 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h4><ul><li>浏览器请求页面或者需要页面跳转的时候，请求的是前端服务器，前端服务器再去请求后台服务器接口，拿到返回的数据，然后渲染页面</li><li>浏览器发起ajax请求的时候，如果不需要页面跳转，可以直接请求后台服务器，拿到返回的数据，在ajax里对本页面进行渲染</li></ul><p>&#x2F;&#x2F;设置跨域访问  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">all</span>(<span class="hljs-string">&#x27;*&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) &#123;  <br><br>    res.<span class="hljs-title function_">header</span>(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);  <br><br>    <span class="hljs-comment">//res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;X-Requested-With&quot;);  </span><br><br>    <span class="hljs-comment">//res.header(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,POST,GET,DELETE,OPTIONS&quot;);  </span><br><br>    <span class="hljs-comment">// res.header(&quot;X-Powered-By&quot;,&#x27; 3.2.1&#x27;)  </span><br><br>    <span class="hljs-comment">//res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);  </span><br>    <br>    res.<span class="hljs-title function_">header</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="hljs-string">&quot;true&quot;</span>);<span class="hljs-comment">//允许跨域设置cookie</span><br><br>    <span class="hljs-title function_">next</span>();  <br><br>&#125;); <br><span class="hljs-comment">//ajax中设置跨域访问cookie</span><br><span class="hljs-attr">xhrFields</span>:&#123;<br>            <span class="hljs-attr">withCredentials</span>:<span class="hljs-literal">true</span><br>        &#125;,<br></code></pre></td></tr></table></figure><p>使用https协议</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//使用openssl生成私钥、证书签名、证书</span><br># openssl genrsa <span class="hljs-number">1024</span> &gt;./private.<span class="hljs-property">pem</span><br># openssl req -<span class="hljs-keyword">new</span> -key ./private.<span class="hljs-property">pem</span> -out csr.<span class="hljs-property">pem</span><br># openssl x509 -req -days <span class="hljs-number">365</span> -<span class="hljs-keyword">in</span> csr.<span class="hljs-property">pem</span> -signkey ./private.<span class="hljs-property">pem</span> -out ./file.<span class="hljs-property">crt</span><br><br><span class="hljs-comment">//服务器中使用https</span><br><span class="hljs-keyword">var</span> https = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;https&quot;</span>)<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(path.<span class="hljs-title function_">join</span>(__dirname,<span class="hljs-string">&quot;https/private.pem&quot;</span>),<span class="hljs-string">&quot;utf8&quot;</span>)<br><span class="hljs-keyword">var</span> certificate = fs.<span class="hljs-title function_">readFileSync</span>(path.<span class="hljs-title function_">join</span>(__dirname,<span class="hljs-string">&quot;https/file.crt&quot;</span>),<span class="hljs-string">&quot;utf8&quot;</span>)<br><span class="hljs-keyword">var</span> credentials = &#123;<span class="hljs-attr">key</span>:privateKey,<span class="hljs-attr">cert</span>:certificate&#125;<br><br><span class="hljs-keyword">var</span> httpsServer = https.<span class="hljs-title function_">createServer</span>(credentials,app)<br>httpsServer.<span class="hljs-title function_">listen</span>(<span class="hljs-number">3000</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;server started at https://127.0.0.1:3000&quot;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p>sql注入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//只有使用字符串拼接才会出现sql注入漏洞</span><br>connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers where email=&#x27;&quot;</span> + body.<span class="hljs-property">email</span> + <span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;&#125;)<br><br><span class="hljs-comment">//防止sql注入</span><br>#使用占位符<br>connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers where email=?&quot;</span>,body.<span class="hljs-property">email</span>,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;&#125;)<br>connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers where email=? and password=?&quot;</span>,[body.<span class="hljs-property">email</span>,body.<span class="hljs-property">password</span>],<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;&#125;)<br>#使用<span class="hljs-built_in">escape</span>方法对参数编码，变量两边没有引号<br>connection.<span class="hljs-title function_">query</span>(<span class="hljs-string">&quot;select * from teachers where email=&quot;</span> + connection.<span class="hljs-built_in">escape</span>(body.<span class="hljs-property">email</span>),<span class="hljs-keyword">function</span> (<span class="hljs-params">err,result</span>)&#123;&#125;)<br></code></pre></td></tr></table></figure><p>安装xmysql，支持postman使用api操作数据库</p><p><a href="https://www.npmjs.com/package/xmysql">https://www.npmjs.com/package/xmysql</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install xmysql<br><span class="hljs-comment">//开启xmysql服务</span><br>xmysql -h <span class="hljs-number">192.168</span><span class="hljs-number">.199</span><span class="hljs-number">.100</span> -u root -p <span class="hljs-number">7758521</span> -d eduSystem<br><span class="hljs-comment">//访问地址</span><br><span class="hljs-attr">localhost</span>:<span class="hljs-number">3000</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo框架创建个人博客</title>
    <link href="/2024/12/08/%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/12/08/%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>1、安装nodejs，git</p><p>2、安装hexo</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>3、新建文件夹作为博客目录，例如D:&#x2F;myblog</p><p>4、初始化目录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo init myblog<br></code></pre></td></tr></table></figure><p>5、启动hexo，访问地址<a href="http://localhost:4000/">http://localhost:4000</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cd myblog<br>hexo s<br></code></pre></td></tr></table></figure><p>6、部署到github</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">name</span> <span class="hljs-string">&quot;github_name&quot;</span><br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">email</span> <span class="hljs-string">&quot;github_email&quot;</span><br><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;github_email&quot;</span>  <span class="hljs-comment">//创建ssh密钥文件</span><br><br></code></pre></td></tr></table></figure><p>登录github，点击 New  SSH  key</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh -T <span class="hljs-symbol">git@</span>github.com  <span class="hljs-comment">//测试连接是否成功</span><br></code></pre></td></tr></table></figure><p>修改 _config.yml</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Deployment<br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span><br>deploy:<br>  type: <span class="hljs-string">&#x27;git&#x27;</span><br>  repo: https:<span class="hljs-comment">//github.com/github_name/github_name.github.io</span><br>  branch: main<br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">npm install hexo-deployer-git <span class="hljs-params">--save</span><br><br><span class="hljs-keyword">cd</span> myblog<br><br>hexo clean<br>hexo g<br>hexo d  <span class="hljs-string">//</span>部署<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
